(window.webpackJsonp=window.webpackJsonp||[]).push([[396],{907:function(e,r,o){"use strict";o.r(r);var t=o(6),s=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"worker-postmessage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#worker-postmessage"}},[e._v("#")]),e._v(" Worker.postMessage()")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Worker",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("Worker")]),o("OutboundLink")],1),e._v(" 接口的 "),o("code",[e._v("**postMessage()**")]),e._v("方法向worker的内部作用域发送一个消息。这接受单个参数，这是要发送给worker的数据。数据可以是由"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("结构化克隆"),o("OutboundLink")],1),e._v("算法处理的任何值或JavaScript对")]),e._v(" "),o("p",[e._v("参数")]),e._v(" "),o("blockquote",[o("p",[o("em",[e._v("aMessage")])])]),e._v(" "),o("p",[e._v("The object to deliver to the worker; this will be in the data field in the event delivered to the "),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/onmessage",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("DedicatedWorkerGlobalScope.onmessage")]),e._v(" (en-US)"),o("OutboundLink")],1),e._v(" handler. This may be any value or JavaScript object handled by the "),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("structured clone"),o("OutboundLink")],1),e._v(" algorithm, which includes cyclical references.")]),e._v(" "),o("blockquote",[o("p",[o("em",[e._v("transferList")]),e._v(" 可选")])]),e._v(" "),o("p",[e._v("一个可选的"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Transferable",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("Transferable")]),o("OutboundLink")],1),e._v("对象的"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("数组"),o("OutboundLink")],1),e._v("，用于传递所有权。如果一个对象的所有权被转移，在发送它的上下文中将变为不可用（中止），并且只有在它被发送到的worker中可用。")]),e._v(" "),o("p",[e._v("可转移对象是如"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("ArrayBuffer")]),o("OutboundLink")],1),e._v("，"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MessagePort",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("MessagePort")]),o("OutboundLink")],1),e._v("或"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ImageBitmap",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("ImageBitmap")]),o("OutboundLink")],1),e._v("的实例对象。transferList数组中不可传入null。")]),e._v(" "),o("p",[e._v("以下代码显示了如何使用 "),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Worker/Worker",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("Worker()")]),o("OutboundLink")],1),e._v(" 构造函数创建一个Worker对象。当两个表单输入("),o("code",[e._v("first")]),e._v("和"),o("code",[e._v("second)")]),e._v("中的其中一个的输入值改变时， "),o("code",[e._v("change (en-US)")]),e._v(" 事件将调用"),o("code",[e._v("postMessage()")]),e._v("把两个input的值发送给当前worker。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("var myWorker = new Worker('worker.js');\n\nfirst.onchange = function() {\n  myWorker.postMessage([first.value,second.value]);\n  console.log('Message posted to worker');\n}\n\nsecond.onchange = function() {\n  myWorker.postMessage([first.value,second.value]);\n  console.log('Message posted to worker');\n}\n")])])]),o("p",[e._v("有关完整的示例，请参阅我们的"),o("a",{attrs:{href:"https://github.com/mdn/simple-web-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("Basic dedicated worker example"),o("OutboundLink")],1),e._v(" ("),o("a",{attrs:{href:"https://mdn.github.io/simple-web-worker/",target:"_blank",rel:"noopener noreferrer"}},[e._v("run dedicated worker"),o("OutboundLink")],1),e._v(").")]),e._v(" "),o("p",[o("strong",[e._v("Note")]),e._v(": "),o("code",[e._v("postMessage()")]),e._v(" 一次只能发送一个对象。如上所示，如果你想传递多个值，可以使用数组。")]),e._v(" "),o("h2",{attrs:{id:"sendmessage和postmessage的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sendmessage和postmessage的区别"}},[e._v("#")]),e._v(" sendmessage和postmessage的区别")]),e._v(" "),o("p",[e._v("1、POSTMESSAGE(非阻塞)与SENDMESSAGE(阻塞)")]),e._v(" "),o("p",[e._v("区别1：返回时间不同")]),e._v(" "),o("p",[e._v("PostMessage发送消息后就立即返回")]),e._v(" "),o("p",[e._v("SendMessage发送消息后，等待消息处理函数处理完后才返回。")]),e._v(" "),o("p",[e._v("区别2：返回值不同")]),e._v(" "),o("p",[e._v("从函数定义上来看，PostMessage的返回值是BOOL，")]),e._v(" "),o("p",[e._v("意思是返回非0值，消息执行成功，返回0，执行不成功。")]),e._v(" "),o("p",[e._v("SendMessage的返回值是LRESULT,返回的是消息处理函数后的返回值。")]),e._v(" "),o("p",[e._v("区别3：同步和异步问题")]),e._v(" "),o("p",[e._v("如果发送的消息码在WM_USER之下(非自定义消息)且消息参数中带有指针，那么")]),e._v(" "),o("p",[e._v("PostMessage，SendNotifyMessage，SendMessageCallback这些异步消息发送")]),e._v(" "),o("p",[e._v("函数将会失败。原因是异步消息发送函数发送后会立即返回，这样会导致消息")]),e._v(" "),o("p",[e._v("处理函数还未处理消息，消息参数中的指针就被释放了。")]),e._v(" "),o("p",[e._v("区别4：发送中的过程不同")]),e._v(" "),o("p",[e._v("在同一个线程中，PostMessage发送消息时，消息要先放入系统消息队列中，")]),e._v(" "),o("p",[e._v("系统会根据存放的消息，找到对应的线程(窗口、程序)的消息队列中，然后由")]),e._v(" "),o("p",[e._v("GetMessage/PeekMessage提交给TranslateMessage，如果是键盘、鼠标消息，")]),e._v(" "),o("p",[e._v("TranslateMessage会处理提交给DispatchMessage，如不是，则直接提交给")]),e._v(" "),o("p",[e._v("DispatchMessage，最后DispatchMessage经USER模块协助，将消息传递给窗口")]),e._v(" "),o("p",[e._v("处理函数；而SendMessage发送消息时，由USER模块调用目标窗口的处理函数")]),e._v(" "),o("p",[e._v("处理消息，并将结果返回。")]),e._v(" "),o("p",[e._v("不在同一个线程，基本都是用PostThreadMessage代替PostMessage，因为")]),e._v(" "),o("p",[e._v("PostThreadMessage是直接指定线程ID来确定目标线程；而SendMessage发送")]),e._v(" "),o("p",[e._v("消息到目标窗口所属的线程的消息队列中，然后发送消息的线程在UESR模块内")]),e._v(" "),o("p",[e._v("监视和等待消息处理，直到目标窗口处理完返回。")])])}),[],!1,null,null,null);r.default=s.exports}}]);