(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{406:function(t,e,a){"use strict";a.r(e);var s=a(45),c=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"fetch新一代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch新一代"}},[t._v("#")]),t._v(" Fetch新一代")]),t._v(" "),a("blockquote",[a("p",[t._v("前段时间看到一句话，Ajax已死，Fetch永生。当然只是一句玩笑话啦！！！")])]),t._v(" "),a("p",[t._v("上面这句话就表明了ajax和Fetch的历史渊源。实际上Fetch和XMLHttpRequest同级，都是浏览器的内置API，不过Fetch是基于Promise对http请求进行了封装。")]),t._v(" "),a("p",[t._v("ajax实际上是对XHR的封装，使其API更好用。而axios则是在基于es6的Promise对ajax再一次封装，现在你应该能理解ajax和Fetch的关系了吧。")]),t._v(" "),a("p",[t._v("下面我们来学习Fetch")]),t._v(" "),a("p",[t._v("Ajax和Fetch都是浏览器端向服务器端发送数据请求的http封装。只不过Fetch是基于Promise的。")])])}),[],!1,null,null,null);e.default=c.exports}}]);