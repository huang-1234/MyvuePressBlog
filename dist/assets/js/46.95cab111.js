(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{405:function(n,e,s){"use strict";s.r(e);var a=s(45),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"c-vscode编码格式配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-vscode编码格式配置"}},[n._v("#")]),n._v(" c++VSCode编码格式配置")]),n._v(" "),s("p",[n._v("习惯在代码中左花括号不换行的风格，网上搜了下，在vscode中settings.json设置如下：")]),n._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[n._v('"editor.formatOnSave"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[n._v('"C_Cpp.clang_format_style"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"{ BasedOnStyle: Chromium, IndentWidth: 4}"')]),n._v("\n")])])]),s("p",[n._v("其中launch.json配置文件代码如下：")]),n._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('{\n // 使用 IntelliSense 了解相关属性。 \n // 悬停以查看现有属性的描述。\n // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n "version": "0.2.0",\n "configurations": [\n  {\n   "name": "gcc.exe - 生成和调试活动文件",\n   "type": "cppdbg",\n   "request": "launch",\n   "program": "${fileDirname}\\\\${fileBasenameNoExtension}.exe",\n   "args": [],\n   "stopAtEntry": false,\n   "cwd": "${workspaceFolder}",\n   "environment": [],\n   "externalConsole": true, //控制台输出,false则不显示终端窗口\n   "MIMode": "gdb",\n   "miDebuggerPath": "F:\\\\WareDownload\\\\C++\\\\mingw64\\\\bin\\\\gdb.exe", //修改成你自己的路径\n   "setupCommands": [\n    {\n     "description": "为 gdb 启用整齐打印",\n     "text": "-enable-pretty-printing",\n     "ignoreFailures": true\n    }\n   ],\n   "preLaunchTask": "gcc.exe build active file"//该处一定要与tasks.json的lable一致\n  }\n ]\n}\n')])])]),s("p",[n._v("tasks.json配置文件代码如下：")]),n._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('{\n  "version": "2.0.0",\n  "tasks": [\n    {\n      "type": "shell",\n      "label": "gcc.exe build active file", //一定与preLaunchTask一致\n      "command": "F:\\\\WareDownload\\\\C++\\\\mingw64\\\\bin\\\\gdb.exe", //改为你自己的路径\n      "args": [\n        "-g",\n        "${file}",\n        // "${fileDirname}\\\\printf.c",\n        "-o",\n        "${fileDirname}\\\\${fileBasenameNoExtension}.exe"\n      ],\n      "options": {\n        "cwd": "F:\\\\WareDownload\\\\C++\\\\mingw64\\\\bin" //改为自己的路径的bin文件夹\n      },\n      "problemMatcher": [\n        "$gcc"\n      ],\n      "group": "build"\n    }\n  ]\n}\n')])])]),s("p",[n._v("注1：要特别注意两个配置文件中的注释部分，尤其是路径部分，要改成自己的安装路径。\n注2：两个配置文件中的三处“gcc”和“g++”的区别？（gcc链接c代码，g++链接c++？）。\n注3：若要链接多个源文件，则解开tasks.json配置文件中“args”部分代码即可（示例链接printf.c文件），有更简便的方法不需要枚举所有c源文件，自行百度尝试。\n注4：配置完成后保存.vscode文件，复制到其他工程的根目录下可省略下一次的重新配置。\n注5：每次更改完配置文件后要及时保存，否则不更新配置信息。")])])}),[],!1,null,null,null);e.default=t.exports}}]);