(window.webpackJsonp=window.webpackJsonp||[]).push([[464],{977:function(t,e,n){"use strict";n.r(e);var a=n(6),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vue-ts项目vue-property-decorator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-ts项目vue-property-decorator"}},[t._v("#")]),t._v(" vue+ts项目vue-property-decorator")]),t._v(" "),n("p",[t._v("在vue项目使用ts时，装饰器有以下几种，下面为这些装饰器的具体用法并且有和js中写法的对比：")]),t._v(" "),n("ol",[n("li",[t._v("@Component")]),t._v(" "),n("li",[t._v("@Emit")]),t._v(" "),n("li",[t._v("@Prop")]),t._v(" "),n("li",[t._v("@Watch")]),t._v(" "),n("li",[t._v("@Model")]),t._v(" "),n("li",[t._v("@Inject / @Provide")]),t._v(" "),n("li",[t._v("Mixins")])]),t._v(" "),n("p",[t._v("下面为具体代码：")]),t._v(" "),n("h3",{attrs:{id:"_1-component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-component"}},[t._v("#")]),t._v(" 1.@Component")]),t._v(" "),n("h4",{attrs:{id:"ts中引入组件components写在-component中-如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中引入组件components写在-component中-如下"}},[t._v("#")]),t._v(" ts中引入组件components写在@Component中，如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n    <div class=\"parent\">\n        parent组件--{{title}}\n        <hr>\n        <Home v-model=\"title\"></Home>\n        <About v-model=\"title\"></About>\n    </div>\n</template>\n\n<script lang='ts'>\n    import Home from './Home.vue'\n    import About from './About.vue'\n    import { Component, Vue } from 'vue-property-decorator';\n    @Component({\n        components: {\n            Home,\n            About\n        }\n    })\n    export default class  extends Vue {\n        private title: string = '父组件中的值'\n    }\n<\/script>\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为在js中引入组件components的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为在js中引入组件components的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为在js中引入组件components的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<script>\nimport Home from './Home.vue'\nimport About from './About.vue'\nexport default {\n    data() {\n        return {\n            title: '父组件中的值'\n        }\n    },\n    components: {\n        Home,\n        About\n    }\n}\n<\/script>\n复制代码\n")])])]),n("h3",{attrs:{id:"_2-emit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-emit"}},[t._v("#")]),t._v(" 2.@Emit")]),t._v(" "),n("h4",{attrs:{id:"ts中-emit的用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中-emit的用法如下"}},[t._v("#")]),t._v(" ts中@Emit的用法如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    <button @click=\"triggerEmit('qqq')\">触发emit</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Emit } from 'vue-property-decorator';\n\n@Component({})\nexport default class Home extends Vue {\n\n  private mounted() {\n    this.$on('demo-log', (data: any): void => {\n      alert(data)\n    })\n  }\n\n  @Emit('demo-log')\n  triggerEmit(n: any) {\n    console.log('hhh')\n  }\n}\n<\/script>\n复制代码\n")])])]),n("p",[t._v("下面为@Emit的另一种写法，$on位置使用 - 链接，@Emit位置直接使用驼峰命名，则可以省略括号中的名称：”")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default class Home extends Vue {\n  private mounted() {\n    this.$on('trigger-emit', (data: any): void => {\n      alert(data)\n    })\n  }\n  @Emit()\n  triggerEmit(n: any) {\n    console.log('hhh')\n  }\n}\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为-emit在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为-emit在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为$Emit在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default {\n  data() {\n    return {}\n  },\n  mounted() {\n    this.$on('trigger-emit', data => {\n      alert(data)\n    })\n  },\n  methods: {\n    triggerEmit(val) {\n      this.$emit('trigger-emit', val)\n    }\n  }\n}\n复制代码\n")])])]),n("h3",{attrs:{id:"_3-prop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-prop"}},[t._v("#")]),t._v(" 3.@Prop")]),t._v(" "),n("h4",{attrs:{id:"ts中-prop的用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中-prop的用法如下"}},[t._v("#")]),t._v(" ts中@Prop的用法如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    <p>这是从父组件中传过来的值: {{title}}</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop } from 'vue-property-decorator';\n\n@Component({})\nexport default class Home extends Vue {\n  @Prop() title!: string;\n  // prop的类型和默认值 \n  // @Prop({type: String, default: 'default value'}) title!: string;\n}\n<\/script>\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为prop在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为prop在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为prop在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default {\n  data() {\n    return {}\n  },\n  props: ['title'],\n  // props: {\n  //   title: {\n  //     style: String,\n  //     default: 'default value'\n  //   }\n  // }\n}\n复制代码\n")])])]),n("h3",{attrs:{id:"_4-watch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-watch"}},[t._v("#")]),t._v(" 4.@Watch")]),t._v(" "),n("h4",{attrs:{id:"ts中-watch的用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中-watch的用法如下"}},[t._v("#")]),t._v(" ts中@Watch的用法如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    <input type=\"text\" v-model=\"inputValue\">\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from 'vue-property-decorator';\n\n@Component({})\nexport default class Home extends Vue {\n  private inputValue: string = ''\n  @Watch('inputValue')\n  valueChange(newValue: string, oldValue: string) {\n    console.log(newValue, oldValue)\n  }\n  // 对watch的配置为第二个参数，以对象形式传入\n  // @Watch('inputValue',{ deep: true })\n  // valueChange(newValue: string, oldValue: string) {\n  //   console.log(newValue, oldValue)\n  // }\n   \n}\n<\/script>\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为watch在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为watch在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为watch在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default {\n  data() {\n    return {\n      inputValue: ''\n    }\n  },\n  watch: {\n    inputValue(newValue, oldValue) {\n      console.log(newValue, oldValue)\n    }\n  }\n}\n复制代码\n")])])]),n("h3",{attrs:{id:"_5-model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-model"}},[t._v("#")]),t._v(" 5.@Model")]),t._v(" "),n("h4",{attrs:{id:"ts中-model的用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中-model的用法如下"}},[t._v("#")]),t._v(" ts中@Model的用法如下")]),t._v(" "),n("p",[t._v("父组件代码如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n    <div class=\"parent\">\n        parent组件--{{title}}\n        <hr>\n        <Home v-model=\"title\"></Home>\n        \x3c!-- 直接使用v-mode为以下使用标签的语法糖，默认子组件使用value接受prop传值使用emit调用input方法修改值，在使用model参数prop修改如何接受，event修改emit调用哪个方法来修改值 --\x3e\n        \x3c!--<Home :value=\"title\" @input=\"title=$event.target.value\"></Home>--\x3e\n    </div>\n</template>\n\n<script lang='ts'>\n    import Home from './Home.vue'\n    import { Component, Vue } from 'vue-property-decorator';\n    @Component({\n        components: {\n            Home\n        }\n    })\n    export default class  extends Vue {\n        private title: string = '父组件中的值'\n    }\n<\/script>\n复制代码\n")])])]),n("p",[t._v("子组件ts代码如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n  <div class="home">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    <input type="text" v-model="inputValue" @input="valueChange($event.target.value)">\n  </div>\n</template>\n\n<script lang="ts">\nimport { Component, Vue, Model, Emit, Prop } from \'vue-property-decorator\';\n\n@Component({})\nexport default class Home extends Vue {\n  private inputValue: string = \'\'\n  private created() {\n    this.inputValue = this.valueFromModel\n  }\n  @Model (\'changeValueFromModel\')  valueFromModel !: string;\n  @Emit(\'changeValueFromModel\')\n  // 参数应该为输入框的值，所以上面传过来的值应该为value而不能是e\n  valueChange(val: string) {}\n   \n}\n<\/script>\n复制代码\n')])])]),n("h4",{attrs:{id:"下面为model在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为model在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为model在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default {\n  model:{\n    prop: 'valueFromModel',\n    event: 'changeValueFromModel'\n  },\n  props: ['valueFromModel'],\n  data() {\n    return {\n      inputValue: ''\n    }\n  },\n  created() {\n    this.inputValue = this.valueFromModel\n  },\n  methods: {\n    valueChange(e) {\n      this.$emit('changeValueFromModel', e.target.value)\n    }\n  }\n  \n}\n复制代码\n")])])]),n("h3",{attrs:{id:"_6-provide-inject"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-provide-inject"}},[t._v("#")]),t._v(" 6.@Provide / @Inject")]),t._v(" "),n("h4",{attrs:{id:"ts中-provide-inject用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中-provide-inject用法如下"}},[t._v("#")]),t._v(" ts中@Provide / @Inject用法如下")]),t._v(" "),n("p",[t._v("父组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n    <div class=\"parent\">\n        parent组件--{{title}}\n        <Home></Home>\n    </div>\n</template>\n\n<script lang='ts'>\n    import Home from './Home.vue'\n    import { Component, Vue, Provide } from 'vue-property-decorator';\n    @Component({\n        components: {\n            Home\n        }\n    })\n    export default class  extends Vue {\n        private title: string = '父组件中的值'\n        @Provide()\n        pOne = 'oneFromProvide'\n        \n        @Provide('pTwo')\n        two = 'twoFromProvide'\n    }\n<\/script>\n复制代码\n")])])]),n("p",[t._v("子组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    来自provide中的值--1--{{pOne}}--2--{{pTwo}}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Inject } from 'vue-property-decorator';\nimport outMixins from './mixins';\n\n@Component({})\nexport default class Home extends Vue {\n  @Inject('pOne')\n    pOne!: string;\n    \n  @Inject({\n      from:'pTwo',\n      default:'default value'\n  })\n  pTwo!: string;\n}\n<\/script>\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为project-inject在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为project-inject在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为project / inject在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("p",[t._v("父组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n    <div class=\"parent\">\n        parent组件\n        <About></About>\n    </div>\n</template>\n\n<script>\nimport About from './About.vue'\nexport default {\n    components: {\n        About\n    },\n    provide () {\n        return {\n            pOne: 'oneFromProvide',\n            pTwo: 'twoFromProvide'\n        }\n    }\n}\n<\/script>\n复制代码\n")])])]),n("p",[t._v("子组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+js项目\n    <hr>\n    来自provide中的值--1--{{pOne}}--2--{{pTwo}}\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: {\n    pOne: 'pOne',\n    pTwo: { from: 'pTwo', default: 'default value' }\n  }\n}\n<\/script>\n复制代码\n")])])]),n("h3",{attrs:{id:"_7-mixins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-mixins"}},[t._v("#")]),t._v(" 7.Mixins")]),t._v(" "),n("h4",{attrs:{id:"ts中mixins的用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ts中mixins的用法如下"}},[t._v("#")]),t._v(" ts中Mixins的用法如下")]),t._v(" "),n("p",[t._v("mixins.ts文件如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import { Vue, Component } from 'vue-property-decorator';\n\n@Component\nexport default class myMixins extends Vue {\n    valueFromMixins: string = \"来自mixins的value\"\n}\n复制代码\n")])])]),n("p",[t._v("ts代码如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n  <div class=\"home\">\n    vue+ts项目vue-property-decorator用法\n    <hr>\n    来自mixins中的变量--{{valueFromMixins}}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Model, Emit, Prop } from 'vue-property-decorator';\nimport outMixins from './mixins';\n\n@Component({\n  mixins: [outMixins]\n})\nexport default class Home extends Vue {}\n<\/script>\n\n复制代码\n")])])]),n("h4",{attrs:{id:"下面为mixins在js中的写法-与上面ts的代码效果一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下面为mixins在js中的写法-与上面ts的代码效果一样"}},[t._v("#")]),t._v(" 下面为mixins在js中的写法，与上面ts的代码效果一样：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<script>\nimport {outMixins} from './mixins'\nexport default {\n  mixins:[outMixins]\n}\n<\/script>\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);