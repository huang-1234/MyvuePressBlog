(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{545:function(a,n,t){"use strict";t.r(n);var e=t(6),s=Object(e.a)({},(function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"conda、miniconda、anaconda的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conda、miniconda、anaconda的区别"}},[a._v("#")]),a._v(" conda、miniconda、anaconda的区别")]),a._v(" "),t("p",[a._v("可能从conda、miniconda和anaconda三个名词来说用得最多比较熟悉的应该是anaconda吧，包办一切，帮我们安装好了很多包和环境，我们都喜欢用现成的东西，懒得自己捣鼓。最近刚好有项目需要，用了一下miniconda，才慢慢理解了conda的含义。")]),a._v(" "),t("p",[a._v("conda是一种通用包管理系统，旨在构建和管理任何语言和任何类型的软件。举个例子：包管理与pip的使用类似，环境管理则允许用户方便地安装不同版本的python并可以快速切换。")]),a._v(" "),t("p",[a._v("Anaconda则是一个打包的集合，里面预装好了conda、某个版本的python、众多packages、科学计算工具等等，就是把很多常用的不常用的库都给你装好了。")]),a._v(" "),t("p",[a._v("Miniconda，顾名思义，它只包含最基本的内容——python与conda，以及相关的必须依赖项，对于空间要求严格的用户，Miniconda是一种选择。就只包含最基本的东西，其他的库得自己装。")]),a._v(" "),t("h3",{attrs:{id:"对conda的基本掌握"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对conda的基本掌握"}},[a._v("#")]),a._v(" 对conda的基本掌握：")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("：基本操作：\n升级全部库：  conda upgrade "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("all")]),a._v("\n升级一个包  conda update packagename\n安装包：conda install packagename\n也可以安装多个包：   conda installl numpy pandas scipy\n安装固定版本的包：conda install numpy "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.10")]),a._v("\n移除一个包：conda remove packagename \n查看所有包：conda "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("list")]),a._v(" \n")])])]),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("：管理python环境：\n创建虚拟环境：conda create "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("n env_name "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("list")]),a._v(" of packagenaem\neg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  conda create "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("n env_name pandas \n指定python版本：conda create "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("n env_name python2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.7")]),a._v(" pandas \n激活环境： activate env_name\n退出环境 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  deactivate  env_name\n删除虚拟环境：conda env remove "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("n env_name\n显示所有虚拟环境：conda env "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("list")]),a._v("  \nconda 创建的虚拟环境是在anaconda安装目录下的evens下，所以使用pycharm，只要在特定项目配置运行环境就可以了\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);