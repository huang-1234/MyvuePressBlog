(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{384:function(e,r,t){"use strict";t.r(r);var n=t(45),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("在"),t("code",[e._v("JSONNumber")]),e._v("（数字内部不允许包含空格）或"),t("code",[e._v("JSONString")]),e._v("（字符串内部的空格被解释为相应的字符，否则就有问题了）之外的任何位置可以有多余的空白字符。JSON只支持这些空白字符： 制表符（"),t("a",{attrs:{href:"http://unicode-table.com/en/0009/",target:"_blank",rel:"noopener noreferrer"}},[e._v("U+0009"),t("OutboundLink")],1),e._v("），回车（"),t("a",{attrs:{href:"http://unicode-table.com/en/000D/",target:"_blank",rel:"noopener noreferrer"}},[e._v("U+000D"),t("OutboundLink")],1),e._v("），换行（"),t("a",{attrs:{href:"http://unicode-table.com/en/0020/",target:"_blank",rel:"noopener noreferrer"}},[e._v("U+00"),t("OutboundLink")],1),e._v("0A）以及空格（"),t("a",{attrs:{href:"http://unicode-table.com/en/0020/",target:"_blank",rel:"noopener noreferrer"}},[e._v("U+0020"),t("OutboundLink")],1),e._v("）。")]),e._v(" "),t("h2",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON#methods",target:"_blank",rel:"noopener noreferrer"}},[e._v("方法"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("JSON.parse()")]),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("解析JSON字符串并返回对应的值，可以额外传入一个转换函数，用来将生成的值和其属性, 在返回之前进行某些修改。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("JSON.stringify()")]),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("返回与指定值对应的JSON字符串，可以通过额外的参数, 控制仅包含某些属性, 或者以自定义方法来替换某些key对应的属性值。")])])]),e._v(" "),t("h2",{attrs:{id:"polyfill"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#polyfill"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON#polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("Polyfill"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("JSON")]),e._v("对象可能不被老版本的浏览器支持。可以将下面的代码放到JS脚本最开始的位置，这样就可以在没有原生支持 JSON 对象的浏览器（如IE6）中使用 "),t("code",[e._v("JSON")]),e._v("对象。")]),e._v(" "),t("p",[e._v("以下算法是对原生"),t("code",[e._v("JSON")]),e._v("对象的模仿：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("if (!window.JSON) {\n  window.JSON = {\n    parse: function(sJSON) { return eval('(' + sJSON + ')'); },\n    stringify: (function () {\n      var toString = Object.prototype.toString;\n      var isArray = Array.isArray || function (a) { return toString.call(a) === '[object Array]'; };\n      var escMap = {'\"': '\\\\\"', '\\\\': '\\\\\\\\', '\\b': '\\\\b', '\\f': '\\\\f', '\\n': '\\\\n', '\\r': '\\\\r', '\\t': '\\\\t'};\n      var escFunc = function (m) { return escMap[m] || '\\\\u' + (m.charCodeAt(0) + 0x10000).toString(16).substr(1); };\n      var escRE = /[\\\\\"\\u0000-\\u001F\\u2028\\u2029]/g;\n      return function stringify(value) {\n        if (value == null) {\n          return 'null';\n        } else if (typeof value === 'number') {\n          return isFinite(value) ? value.toString() : 'null';\n        } else if (typeof value === 'boolean') {\n          return value.toString();\n        } else if (typeof value === 'object') {\n          if (typeof value.toJSON === 'function') {\n            return stringify(value.toJSON());\n          } else if (isArray(value)) {\n            var res = '[';\n            for (var i = 0; i < value.length; i++)\n              res += (i ? ', ' : '') + stringify(value[i]);\n            return res + ']';\n          } else if (toString.call(value) === '[object Object]') {\n            var tmp = [];\n            for (var k in value) {\n              if (value.hasOwnProperty(k))\n                tmp.push(stringify(k) + ': ' + stringify(value[k]));\n            }\n            return '{' + tmp.join(', ') + '}';\n          }\n        }\n        return '\"' + value.toString().replace(escRE, escFunc) + '\"';\n      };\n    })()\n  };\n}\n")])])]),t("p",[e._v("业界更专业, 更强大的"),t("code",[e._v("JSON")]),e._v("对象 "),t("a",{attrs:{href:"http://remysharp.com/2010/10/08/what-is-a-polyfill/",target:"_blank",rel:"noopener noreferrer"}},[e._v("polyfills"),t("OutboundLink")],1),e._v(" 是 "),t("a",{attrs:{href:"https://github.com/douglascrockford/JSON-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSON2"),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://bestiejs.github.com/json3",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSON3"),t("OutboundLink")],1),e._v("。")])])}),[],!1,null,null,null);r.default=a.exports}}]);