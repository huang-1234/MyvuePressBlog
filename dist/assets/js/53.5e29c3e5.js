(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{413:function(n,e,t){"use strict";t.r(e);var a=t(45),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"c-引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-引用"}},[n._v("#")]),n._v(" C++ 引用")]),n._v(" "),t("p",[n._v("引用变量是一个别名，也就是说，它是某个已存在变量的另一个名字。一旦把引用初始化为某个变量，就可以使用该引用名称或变量名称来指向变量。")]),n._v(" "),t("h2",{attrs:{id:"c-引用-vs-指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-引用-vs-指针"}},[n._v("#")]),n._v(" C++ 引用 vs 指针")]),n._v(" "),t("p",[n._v("引用很容易与指针混淆，它们之间有三个主要的不同：")]),n._v(" "),t("ul",[t("li",[n._v("不存在空引用。引用必须连接到一块合法的内存。")]),n._v(" "),t("li",[n._v("一旦引用被初始化为一个对象，就不能被指向到另一个对象。指针可以在任何时候指向到另一个对象。")]),n._v(" "),t("li",[n._v("引用必须在创建时被初始化。指针可以在任何时间被初始化。")])]),n._v(" "),t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include <iostream>\n\nusing namespace std;\n\nint main() {\n  // 声明简单的变量\n  int i;\n  double d;\n\n  // 声明引用变量\n  int& r = i;\n  double& s = d;\n\n  i = 5;\n  r = i * 2;  // r改变时，i也会改变\n  cout << "Value of i : " << i << endl;\n  cout << "Value of i reference : " << r << endl;\n\n  d = 11.7;\n  cout << "Value of d : " << d << endl;\n  cout << "Value of d reference : " << s << endl;\n\n  return 0;\n}\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);