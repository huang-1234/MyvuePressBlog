(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{307:function(t,n,e){"use strict";function s(t,n,e,s,a,o,r,p){var c,l="function"==typeof t?t.options:t;if(n&&(l.render=n,l.staticRenderFns=e,l._compiled=!0),s&&(l.functional=!0),o&&(l._scopeId="data-v-"+o),r?(c=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),a&&a.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(r)},l._ssrRegister=c):a&&(c=p?function(){a.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:a),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(t,n){return c.call(n),u(t,n)}}else{var i=l.beforeCreate;l.beforeCreate=i?[].concat(i,c):[c]}return{exports:t,options:l}}e.d(n,"a",(function(){return s}))},452:function(t,n,e){"use strict";e.r(n);var s=e(307),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react的生命周期函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react的生命周期函数"}},[t._v("#")]),t._v(" react的生命周期函数")]),t._v(" "),e("p",[t._v("先来了解一下react的生命周期函数有哪些：")]),t._v(" "),e("p",[t._v("组件将要挂载时触发的函数：componentWillMount\n组件挂载完成时触发的函数：componentDidMount\n是否要更新数据时触发的函数：shouldComponentUpdate\n将要更新数据时触发的函数：componentWillUpdate\n数据更新完成时触发的函数：componentDidUpdate\n组件将要销毁时触发的函数：componentWillUnmount\n父组件中改变了props传值时触发的函数：componentWillReceiveProps\n下面来上代码详细说明一下")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token doctype"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),e("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UTF-8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2_react生命周期(旧)"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 准备好一个“容器” --\x3e")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("jsx部分")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\t\x3c!-- 引入react核心库 --\x3e\n\t<script type=\"text/javascript\" src=\"../js/react.development.js\"><\/script>\n\t\x3c!-- 引入react-dom，用于支持react操作DOM --\x3e\n\t<script type=\"text/javascript\" src=\"../js/react-dom.development.js\"><\/script>\n\t\x3c!-- 引入babel，用于将jsx转为js --\x3e\n\t<script type=\"text/javascript\" src=\"../js/babel.min.js\"><\/script>\n\n\t<script type=\"text/babel\">\n\t\t/* \n\t\t\t\t1. 初始化阶段: 由ReactDOM.render()触发---初次渲染\n\t\t\t\t\t\t\t\t\t1.\tconstructor()\n\t\t\t\t\t\t\t\t\t2.\tcomponentWillMount()\n\t\t\t\t\t\t\t\t\t3.\trender()\n\t\t\t\t\t\t\t\t\t4.\tcomponentDidMount() =====> 常用\n\t\t\t\t\t\t\t\t\t\t\t\t  一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息\n\t\t\t\t2. 更新阶段: 由组件内部this.setSate()或父组件render触发\n\t\t\t\t\t\t\t\t\t1.\tshouldComponentUpdate()\n\t\t\t\t\t\t\t\t\t2.\tcomponentWillUpdate()\n\t\t\t\t\t\t\t\t\t3.\trender() =====> 必须使用的一个\n\t\t\t\t\t\t\t\t\t4.\tcomponentDidUpdate()\n\t\t\t\t3. 卸载组件: 由ReactDOM.unmountComponentAtNode()触发\n\t\t\t\t\t\t\t\t\t1.\tcomponentWillUnmount()  =====> 常用\n\t\t\t\t\t\t\t\t\t\t\t\t\t一般在这个钩子中做一些收尾的事，例如：关闭定时器、取消订阅消息\n\t\t*/\n\t\t//创建组件\n\t\tclass Count extends React.Component{\n\n\t\t\t//构造器\n\t\t\tconstructor(props){console.log('Count---constructor');\n\t\t\t\tsuper(props)\n\t\t\t\t//初始化状态\n\t\t\t\tthis.state = {count:0}\n\t\t\t}\n\n\t\t\t//加1按钮的回调\n\t\t\tadd = ()=>{\n\t\t\t\t//获取原状态\n\t\t\t\tconst {count} = this.state\n\t\t\t\t//更新状态\n\t\t\t\tthis.setState({count:count+1})\n\t\t\t}\n\n\t\t\t//卸载组件按钮的回调\n\t\t\tdeath = ()=>{\n\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById('test'))\n\t\t\t}\n\n\t\t\t//强制更新按钮的回调\n\t\t\tforce = ()=>{\n\t\t\t\tthis.forceUpdate()\n\t\t\t}\n\n\t\t\t//组件将要挂载的钩子\n\t\t\tcomponentWillMount(){console.log('Count---componentWillMount');}\n\n\t\t\t//组件挂载完毕的钩子\n\t\t\tcomponentDidMount(){console.log('Count---componentDidMount');}\n\n\t\t\t//组件将要卸载的钩子\n\t\t\tcomponentWillUnmount(){console.log('Count---componentWillUnmount');}\n\n\t\t\t//控制组件更新的“阀门” 必须返回一个布尔值\n\t\t\tshouldComponentUpdate(){\n        console.log('Count---shouldComponentUpdate');return true\n      }\n\n\t\t\t//组件将要更新的钩子\n\t\t\tcomponentWillUpdate(){console.log('Count---componentWillUpdate');}\n\n\t\t\t//组件更新完毕的钩子\n\t\t\tcomponentDidUpdate(){console.log('Count---componentDidUpdate');}\n\n\t\t\trender(){\n\t\t\t\tconsole.log('Count---render');\n\t\t\t\tconst {count} = this.state\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>当前求和为：{count}</h2>\n\t\t\t\t\t\t<button onClick={this.add}>点我+1</button>\n\t\t\t\t\t\t<button onClick={this.death}>卸载组件</button>\n\t\t\t\t\t\t<button onClick={this.force}>不更改任何状态中的数据，强制更新一下</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\t//父组件A\n\t\tclass A extends React.Component{\n\t\t\t//初始化状态\n\t\t\tstate = {carName:'奔驰'}\n\t\t\tchangeCar = ()=>{this.setState({carName:'奥拓'})}\n\n\t\t\trender(){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>我是A组件</div>\n\t\t\t\t\t\t<button onClick={this.changeCar}>换车</button>\n\t\t\t\t\t\t<B carName={this.state.carName}/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\t//子组件B\n\t\tclass B extends React.Component{\n\t\t\t//组件将要接收新的props的钩子\n\t\t\tcomponentWillReceiveProps(props){\n\t\t\t\tconsole.log('B---componentWillReceiveProps',props);\n\t\t\t}\n\n\t\t\t//控制组件更新的“阀门”\n\t\t\tshouldComponentUpdate(){\n\t\t\t\tconsole.log('B---shouldComponentUpdate');return true\n\t\t\t}\n\t\t\t//组件将要更新的钩子\n\t\t\tcomponentWillUpdate(){console.log('B---componentWillUpdate');}\n\n\t\t\t//组件更新完毕的钩子\n\t\t\tcomponentDidUpdate(){console.log('B---componentDidUpdate');}\n\n\t\t\trender(){\n\t\t\t\tconsole.log('B---render');\n\t\t\t\treturn(\n\t\t\t\t\t<div>我是B组件，接收到的车是:{this.props.carName}</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t//渲染组件\n\t\tReactDOM.render(<Count/>,document.getElementById('test'))\n\t<\/script>\n")])])]),e("p",[t._v("一.挂载部分\n根据官方生命周期图我们可以看到，一个组件的加载渲染，首先是defaultProps和propsTypes，（这两个是什么下一篇会单独说，这里也不是重点）\n然后就是constructor及this.state里的初始数据，所以到这里是第一步。接着就是componentWillMount 组件将要开始挂载了，这是第二步。然后组件挂载，render解析渲染，所以第三步呼之欲出，就是render数据都渲染完成，最后componentDidMount\n组件挂载完成。")]),t._v(" "),e("p",[t._v("子组件代码，父组件内引入渲染即可（这里先不上代码）")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import React ,{Component} from 'react'\n\nclass Hsq extends Component{\n\tconstructor(props){\n\t\tconsole.log('01构造函数')\t\t\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\t\n\n\t\t}\n\t}\n\t//组件将要挂载时候触发的生命周期函数\n\tcomponentWillMount(){\n\t\tconsole.log('02组件将要挂载')\n\t}\n\t//组件挂载完成时候触发的生命周期函数\n\tcomponentDidMount(){\n\t\tconsole.log('04组件将要挂载')\n\t}\n\trender(){\n\t\tconsole.log('03数据渲染render')\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t生命周期函数演示\n\t\t\t</div>\n\t\t) \n\t}\n\t}\n\texport default Hsq\n")])])]),e("p",[t._v("二.数据更新部分\n数据更新的话第一步是shouldComponentUpdate确认是否要更新数据，当这个函数返回的是true的时候才会进行更新，并且这个函数可以声明两个参数nextProps和nextState，\nnextProps是父组件传给子组件的值，nextState是数据更新之后值，这两个值可以在这个函数中获取到。第二步当确认更新数据之后componentWillUpdate将要更新数据，第三步依旧是render，数据发生改变render重新进行了渲染。第四步是componentDidUpdate数据更新完成。")]),t._v(" "),e("p",[t._v("代码的话子组件在上一部分的基础上，在this.state中定义一个初始数据，render中绑定一下这个数据，之后再增加一个按钮声明一个onClick事件去改变这个数据。这样可以看到数据更新部分的效果，我这里把第一部分的代码删掉了，看着不那么乱。")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import React ,{Component} from 'react'\n\nclass Hsq extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tmsg:'我是一个msg数据'\n\t\t}\n\t}\n\t//是否要更新数据，如果返回true才会更新数据\n\tshouldComponentUpdate(nextProps,nextState){\n\t\tconsole.log('01是否要更新数据')\n\t\tconsole.log(nextProps)\t\t//父组件传给子组件的值，这里没有会显示空\n\t\tconsole.log(nextState)\t\t//数据更新后的值\n\t\treturn true;\t\t\t\t//返回true，确认更新\n\t}\n\t//将要更新数据的时候触发的\n\tcomponentWillUpdate(){\n\t\tconsole.log('02组件将要更新')\n\t}\n\t//更新数据时候触发的生命周期函数\n\tcomponentDidUpdate(){\n\t\tconsole.log('04组件更新完成')\n\t}\n\t//更新数据\n\tsetMsg(){\n\t\tthis.setState({\n\t\t\tmsg:'我是改变后的msg数据'\n\t\t})\n\t}\n\trender(){\n\t\tconsole.log('03数据渲染render')\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.state.msg}\n\t\t\t\t<br/>\n\t\t\t\t<hr/>\n\t\t\t\t<button onClick={()=>this.setMsg()}>更新msg的数据</button>\n\t\t\t</div>\n\t\t) \n\t}\n}\nexport default Hsq\n")])])]),e("p",[t._v("三.单独说一下componentWillReceiveProps，父组件中改变了props传值时触发的函数\n这个函数也就是当我们父组件给子组件传值的时候改变了props的值时触发的函数，刚才在第二部分中也说到shouldComponentUpdate这个函数可以携带两个参数，nextProps就是父组件传给子组件的值\n在父组件中定义一个初始title数据，写一个按钮声明一个onClick事件去改变这个title")]),t._v(" "),e("p",[t._v("四.componentWillUnmount组件将要销毁时的函数\n在父组件中定义一个flag为true的状态值，添加一个按钮声明一个onClick事件去\n更改这个flag实现销毁组件。")])])}),[],!1,null,null,null);n.default=a.exports}}]);