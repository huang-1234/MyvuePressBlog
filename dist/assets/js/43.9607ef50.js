(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{401:function(t,a,s){"use strict";s.r(a);var n=s(45),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器存储-从cookie到indexdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储-从cookie到indexdb"}},[t._v("#")]),t._v(" 浏览器存储-从cookie到indexDB")]),t._v(" "),s("h2",{attrs:{id:"浏览器存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" 浏览器存储")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("cookie")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("localStorage")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("sessionStorage")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("indexDB")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("数据生命周期")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("一般由服务器生成，可以设置过期时间")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("页面关闭就清理")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("数据存储大小")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4K")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("无限")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("与服务端通信")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("每次都会携带在 header 中，对于请求性能影响")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")])])])]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("cookie")]),t._v(" 来说，我们还需要注意安全性。")]),t._v(" "),s("p",[t._v("下面便是cookie的字段")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Value")]),t._v(" "),s("td",[t._v("如果用于保存用户登录态，应该将该值加密，不能使用明文的用户标识")])]),t._v(" "),s("tr",[s("td",[t._v("HttpOnly")]),t._v(" "),s("td",[t._v("不能通过 JS 访问 Cookie，减少 XSS 攻击")])]),t._v(" "),s("tr",[s("td",[t._v("Secure")]),t._v(" "),s("td",[t._v("只能在协议为 HTTPS 的请求中携带")])]),t._v(" "),s("tr",[s("td",[t._v("SameSite")]),t._v(" "),s("td",[t._v("规定浏览器不能在跨域请求中携带 Cookie，减少 CSRF 攻击")])]),t._v(" "),s("tr",[s("td",[t._v("Path")]),t._v(" "),s("td",[t._v("能够携带该键值对的文件路径")])]),t._v(" "),s("tr",[s("td",[t._v("Name")]),t._v(" "),s("td",[t._v("键名")])]),t._v(" "),s("tr",[s("td",[t._v("Domain")]),t._v(" "),s("td",[t._v("能够携带该键值对的域名，开头为"),s("code",[t._v(".")]),t._v(" 则表示其子域名也可以携带")])]),t._v(" "),s("tr",[s("td",[t._v("Size")]),t._v(" "),s("td",[t._v("cookie 大小")])]),t._v(" "),s("tr",[s("td",[t._v("Exptres/Max-Age")]),t._v(" "),s("td",[t._v("cookie 过期时间的时间戳，超时则自动删除")])])])]),t._v(" "),s("p",[t._v("SameSite 的值")]),t._v(" "),s("ul",[s("li",[t._v("None：任何请求都可以携带该 cookie")]),t._v(" "),s("li",[t._v("Lax：部分跨站请求无法发送该 cookie")]),t._v(" "),s("li",[t._v("Strict：所有跨站请求都无法发送该 cookie，仅同站请求允许。")])]),t._v(" "),s("h2",{attrs:{id:"service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),s("p",[t._v("Service Worker 是运行在浏览器背后的"),s("strong",[t._v("独立线程")]),t._v("，一般可以用来实现缓存功能。使用 Service Worker的话，传输协议必须为 "),s("strong",[t._v("HTTPS")]),t._v("。因为 Service Worker 中涉及到请求拦截，所以必须使用 HTTPS 协议来保障安全。")]),t._v(" "),s("p",[t._v("Service Worker 实现缓存功能一般分为三个步骤：")]),t._v(" "),s("ol",[s("li",[t._v("首先需要先注册 Service Worker，")]),t._v(" "),s("li",[t._v("然后监听到 "),s("code",[t._v("install")]),t._v(" 事件以后就可以缓存需要的文件，")]),t._v(" "),s("li",[t._v("那么在下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存，存在缓存的话就可以直接读取缓存文件，否则就去请求数据。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sw.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("registration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'service worker 注册成功'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'servcie worker 注册失败'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sw.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听 `install` 事件，回调中缓存所需文件")]),t._v("\nself"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'install'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cache'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截所有请求事件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果缓存中已经有请求的数据就直接用缓存，否则去请求数据")]),t._v("\nself"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch source'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"_1-从-cookie-说起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-从-cookie-说起"}},[t._v("#")]),t._v(" 1：从 Cookie 说起")]),t._v(" "),s("p",[t._v("Cookie 的本职工作并非本地存储，而是“维持状态”。")]),t._v(" "),s("p",[t._v("在 Web 开发的早期，人们亟需解决的一个问题就是状态管理的问题：HTTP 协议是一个无状态协议，服务器接收客户端的请求，返回一个响应，故事到此就结束了，服务器并没有记录下关于客户端的任何信息。那么下次请求的时候，如何让服务器知道“我是我”呢？")]),t._v(" "),s("p",[t._v("在这样的背景下，Cookie 应运而生。")]),t._v(" "),s("p",[t._v("Cookie 说白了就是一个存储在浏览器里的一个小小的文本文件，它附着在 HTTP 请求上，在浏览器和服务器之间“飞来飞去”。它可以携带用户信息，当服务器检查 Cookie 的时候，便可以获取到客户端的状态。")]),t._v(" "),s("p",[s("strong",[t._v("Cookie 以键值对的形式存在")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"cookie的性能劣势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie的性能劣势"}},[t._v("#")]),t._v(" Cookie的性能劣势")]),t._v(" "),s("p",[t._v("Cookie 不够大")]),t._v(" "),s("p",[t._v("大家知道，Cookie 是有体积上限的，它最大只能有 4KB。当 Cookie 超过 4KB 时，它将面临被裁切的命运。这样看来，Cookie 只能用来存取少量的信息。")]),t._v(" "),s("p",[t._v("过量的 Cookie 会带来巨大的性能浪费")]),t._v(" "),s("p",[s("strong",[t._v("Cookie 是紧跟域名的")]),t._v("。我们通过响应头里的 Set-Cookie 指定要存储的 Cookie 值。默认情况下，domain 被设置为设置 Cookie 页面的主机名，我们也可以手动设置 domain 的值：")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie:")]),t._v(" name=xiuyan; domain=xiuyan.me\n")])])]),s("p",[s("strong",[t._v("同一个域名下的所有请求，都会携带 Cookie")]),t._v("。大家试想，如果我们此刻仅仅是请求一张图片或者一个 CSS 文件，我们也要携带一个 Cookie 跑来跑去（关键是 Cookie 里存储的信息我现在并不需要），这是一件多么劳民伤财的事情。Cookie 虽然小，请求却可以有很多，随着请求的叠加，这样的不必要的 Cookie 带来的开销将是无法想象的。")]),t._v(" "),s("p",[t._v("随着前端应用复杂度的提高，Cookie 也渐渐演化为了一个“存储多面手”——它不仅仅被用于维持状态，还被塞入了一些乱七八糟的其它信息，被迫承担起了本地存储的“重任”。在没有更好的本地存储解决方案的年代里，Cookie 小小的身体里承载了 4KB 内存所不能承受的压力。")]),t._v(" "),s("p",[t._v("为了弥补 Cookie 的局限性，让“专业的人做专业的事情”，Web Storage 出现了。")]),t._v(" "),s("h2",{attrs:{id:"_2-web-storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-web-storage"}},[t._v("#")]),t._v(" 2：Web Storage")]),t._v(" "),s("p",[t._v("Web Storage 是 HTML5 专门为浏览器存储而提供的数据存储机制。它又分为 Local Storage 与 Session Storage。这两组概念非常相近，我们不妨先理解它们之间的区别，再对它们的共性进行研究。")]),t._v(" "),s("h3",{attrs:{id:"local-storage-与-session-storage-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#local-storage-与-session-storage-的区别"}},[t._v("#")]),t._v(" Local Storage 与 Session Storage 的区别")]),t._v(" "),s("p",[t._v("两者的区别在于"),s("strong",[t._v("生命周期")]),t._v("与"),s("strong",[t._v("作用域")]),t._v("的不同。")]),t._v(" "),s("ul",[s("li",[t._v("生命周期：Local Storage 是持久化的本地存储，存储在其中的数据是永远不会过期的，使其消失的唯一办法是手动删除；而 Session Storage 是临时性的本地存储，它是会话级别的存储，当会话结束（页面被关闭）时，存储内容也随之被释放。")]),t._v(" "),s("li",[t._v("作用域：Local Storage、Session Storage 和 Cookie 都遵循同源策略。但 Session Storage 特别的一点在于，即便是相同域名下的两个页面，只要它们"),s("strong",[t._v("不在同一个浏览器窗口中")]),t._v("打开，那么它们的 Session Storage 内容便无法共享。")])]),t._v(" "),s("h3",{attrs:{id:"web-storage-的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-storage-的特性"}},[t._v("#")]),t._v(" Web Storage 的特性")]),t._v(" "),s("ul",[s("li",[t._v("存储容量大： Web Storage 根据浏览器的不同，存储容量可以达到 5-10M 之间。")]),t._v(" "),s("li",[t._v("仅位于浏览器端，不与服务端发生通信。")])]),t._v(" "),s("h3",{attrs:{id:"web-storage-核心-api-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-storage-核心-api-使用示例"}},[t._v("#")]),t._v(" Web Storage 核心 API 使用示例")]),t._v(" "),s("p",[t._v("Web Storage 保存的数据内容和 Cookie 一样，是文本内容，以键值对的形式存在。Local Storage 与 Session Storage 在 API 方面无异，这里我们以 localStorage 为例：")]),t._v(" "),s("ul",[s("li",[t._v("存储数据：setItem()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage.setItem('user_name', 'xiuyan')\n")])])]),s("ul",[s("li",[t._v("读取数据： getItem()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage.getItem('user_name')\n")])])]),s("ul",[s("li",[t._v("删除某一键名对应的数据： removeItem()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage.removeItem('user_name')\n")])])]),s("ul",[s("li",[t._v("清空数据记录：clear()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage.clear()\n")])])]),s("h3",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("Local Storage")]),t._v(" "),s("p",[t._v("Local Storage 在存储方面没有什么特别的限制，理论上 Cookie 无法胜任的、可以用简单的键值对来存取的数据存储任务，都可以交给 Local Storage 来做。")]),t._v(" "),s("p",[t._v("这里给大家举个例子，考虑到 Local Storage 的特点之一是"),s("strong",[t._v("持久")]),t._v("，有时我们更倾向于用它来存储一些内容稳定的资源。比如图片内容丰富的电商网站会用它来存储 Base64 格式的图片字符串：")]),t._v(" "),s("p",[t._v("有的网站还会用它存储一些不经常更新的 CSS、JS 等静态资源。")]),t._v(" "),s("p",[t._v("Session Storage")]),t._v(" "),s("p",[t._v("Session Storage 更适合用来存储生命周期和它同步的"),s("strong",[t._v("会话级别")]),t._v("的信息。这些信息只适用于当前会话，当你开启新的会话时，它也需要相应的更新或释放。比如微博的 Session Storage 就主要是存储你本次会话的浏览足迹：")]),t._v(" "),s("p",[t._v("lasturl 对应的就是你上一次访问的 URL 地址，这个地址是即时的。当你切换 URL 时，它随之更新，当你关闭页面时，留着它也确实没有什么意义了，干脆释放吧。这样的数据用 Session Storage 来处理再合适不过。")]),t._v(" "),s("p",[t._v("这样看来，Web Storage 确实也够强大了。那么 Web Storage 是否能 hold 住所有的存储场景呢？")]),t._v(" "),s("p",[t._v("答案是否定的。大家也看到了，Web Storage 是一个从定义到使用都非常简单的东西。它使用键值对的形式进行存储，这种模式有点类似于对象，却甚至连对象都不是——它只能存储字符串，要想得到对象，我们还需要先对字符串进行一轮解析。")]),t._v(" "),s("p",[t._v("说到底，Web Storage 是对 Cookie 的拓展，它只能用于存储少量的简单数据。当遇到大规模的、结构复杂的数据时，Web Storage 也爱莫能助了。这时候我们就要清楚我们的终极大 boss——IndexedDB！")]),t._v(" "),s("h2",{attrs:{id:"_3-indexeddb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-indexeddb"}},[t._v("#")]),t._v(" 3：IndexedDB")]),t._v(" "),s("p",[t._v("IndexedDB 是一个"),s("strong",[t._v("运行在浏览器上的非关系型数据库")]),t._v("。既然是数据库了，那就不是 5M、10M 这样小打小闹级别了。理论上来说，IndexedDB 是没有存储上限的（一般来说不会小于 250M）。它不仅可以存储字符串，还可以存储二进制数据。")]),t._v(" "),s("p",[t._v("IndexedDB 从推出之日起，其优质教程就层出不绝，我们今天不再着重讲解它的详细操作。接下来，我们遵循 MDN 推荐的操作模式，通过一个基本的 IndexedDB 使用流程，旨在对 IndexedDB 形成一个感性的认知：")]),t._v(" "),s("ol",[s("li",[t._v("打开/创建一个 IndexedDB 数据库（当该数据库不存在时，open 方法会直接创建一个名为 xiaoceDB 新数据库）。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后面的回调中，我们可以通过event.target.result拿到数据库实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数1位数据库名，参数2为版本号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("indexedDB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaoceDB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用IndexedDB失败时的监听函数")]),t._v("\nrequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'无法使用IndexedDB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功")]),t._v("\nrequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onsuccess")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处就可以获取到db实例")]),t._v("\n  db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你打开了IndexedDB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",[s("li",[t._v("创建一个 object store（object store 对标到数据库中的“表”单位）。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// onupgradeneeded事件会在初始化数据库/版本发生更新时被调用，我们在它的监听函数中创建object store\n\n\n\nrequest.onupgradeneeded = function(event){\n\n\n\n  let objectStore\n\n\n\n  // 如果同名表未被创建过，则新建test表\n\n\n\n  if (!db.objectStoreNames.contains('test')) {\n\n\n\n    objectStore = db.createObjectStore('test', { keyPath: 'id' })\n\n\n\n  }\n\n\n\n}  \n")])])]),s("ol",[s("li",[t._v("构建一个事务来执行一些数据库操作，像增加或提取数据等。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  // 创建事务，指定表格名称和读写权限\n\n\n\n  const transaction = db.transaction(["test"],"readwrite")\n\n\n\n  // 拿到Object Store对象\n\n\n\n  const objectStore = transaction.objectStore("test")\n\n\n\n  // 向表格写入数据\n\n\n\n  objectStore.add({id: 1, name: \'xiuyan\'})\n')])])]),s("ol",[s("li",[t._v("通过监听正确类型的事件以等待操作完成。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  // 操作成功时的监听函数\n\n\n\n  transaction.oncomplete = function(event) {\n\n\n\n    console.log("操作成功")\n\n\n\n  }\n\n\n\n  // 操作失败时的监听函数\n\n\n\n  transaction.onerror = function(event) {\n\n\n\n    console.log("这里有一个Error")\n\n\n\n  }\n\n\n\n  \n')])])]),s("h3",{attrs:{id:"indexeddb-的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb-的应用场景"}},[t._v("#")]),t._v(" IndexedDB 的应用场景")]),t._v(" "),s("p",[t._v("通过上面的示例大家可以看出，在 IndexedDB 中，我们可以创建多个数据库，一个数据库中创建多张表，一张表中存储多条数据——这足以 hold 住复杂的结构性数据。IndexedDB 可以看做是 LocalStorage 的一个升级，当数据的复杂度和规模上升到了 LocalStorage 无法解决的程度，我们毫无疑问可以请出 IndexedDB 来帮忙。")]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("浏览器缓存/存储技术的出现和发展，为我们的前端应用带来了无限的转机。近年来基于缓存/存储技术的第三方库层出不绝，此外还衍生出了 "),s("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Flavas.baidu.com%2Fpwa",target:"_blank",rel:"noopener noreferrer"}},[t._v("PWA"),s("OutboundLink")],1),t._v(" 这样优秀的 Web 应用模型。可以说，现代前端应用，尤其是移动端应用，之所以可以发展到在体验上叫板 Native 的地步，主要就是仰仗缓存/存储立下的汗马功劳。")])])}),[],!1,null,null,null);a.default=e.exports}}]);