(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{704:function(t,e,a){"use strict";a.r(e);var s=a(6),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_4-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-regexp"}},[t._v("#")]),t._v(" 4. RegExp")]),t._v(" "),a("h4",{attrs:{id:"正则表达式修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式修饰符"}},[t._v("#")]),t._v(" 正则表达式修饰符")]),t._v(" "),a("p",[a("strong",[t._v("修饰符")]),t._v(" 可以在全局搜索中不区分大小写:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("修饰符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("i")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行对大小写不敏感的匹配。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("g")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行多行匹配。")])])])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"正则表达式模式4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式模式4"}},[t._v("#")]),t._v(" 正则表达式模式4")]),t._v(" "),a("p",[t._v("方括号用于查找某个范围内的字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("表达式")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[abc]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找方括号之间的任何字符。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("[0-9]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找任何从 0 至 9 的数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("(x|y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找任何以 | 分隔的选项。")])])])]),t._v(" "),a("p",[t._v("元字符是拥有特殊含义的字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("元字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\d")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\s")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找空白字符。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配单词边界。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\uxxxx")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找以十六进制数 xxxx 规定的 Unicode 字符。")])])])]),t._v(" "),a("p",[t._v("量词:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("量词")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含至少一个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含零个或多个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n?")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何包含零个或一个 "),a("em",[t._v("n")]),t._v(" 的字符串。")])])])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-regexp-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-regexp-对象"}},[t._v("#")]),t._v(" 使用 RegExp 对象")]),t._v(" "),a("p",[t._v("在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-test"}},[t._v("#")]),t._v(" 使用 test()")]),t._v(" "),a("p",[t._v("test() 方法是一个正则表达式方法。")]),t._v(" "),a("p",[t._v("test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。")]),t._v(" "),a("p",[t._v('以下实例用于搜索字符串中的字符 "e"：')]),t._v(" "),a("h4",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v('var patt = /e/;\npatt.test("The best things in life are free!");')]),t._v(" "),a("p",[t._v('字符串中含有 "e"，所以该实例输出为：')]),t._v(" "),a("p",[t._v("true")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/try/tryit.php?filename=tryjs_regexp_test",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("你可以不用设置正则表达式的变量，以上两行代码可以合并为一行：")]),t._v(" "),a("p",[t._v('/e/.test("The best things in life are free!")')]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"使用-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-exec"}},[t._v("#")]),t._v(" 使用 exec()")]),t._v(" "),a("p",[t._v("exec() 方法是一个正则表达式方法。")]),t._v(" "),a("p",[t._v("exec() 方法用于检索字符串中的正则表达式的匹配。")]),t._v(" "),a("p",[t._v("该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。")]),t._v(" "),a("p",[t._v('以下实例用于搜索字符串中的字母 "e":')]),t._v(" "),a("h4",{attrs:{id:"实例-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-1"}},[t._v("#")]),t._v(" 实例 1")]),t._v(" "),a("p",[t._v('/e/.exec("The best things in life are free!");')]),t._v(" "),a("p",[t._v('字符串中含有 "e"，所以该实例输出为:')]),t._v(" "),a("p",[t._v("e")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/try/tryit.php?filename=tryjs_regexp_exec",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"更多实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多实例"}},[t._v("#")]),t._v(" 更多实例")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3527",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否为数字、字母、下划线组成"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3526",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否全部为字母"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://c.runoob.com/codedemo/3525",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 判断输入字符串是否全部为数字"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"完整的-regexp-参考手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整的-regexp-参考手册"}},[t._v("#")]),t._v(" 完整的 RegExp 参考手册")]),t._v(" "),a("p",[t._v("完整的 RegExp 对象参考手册，请参考我们的 "),a("a",{attrs:{href:"https://www.runoob.com/jsref/jsref-obj-regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript RegExp 参考手册"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("该参考手册包含了所有 RegExp 对象的方法和属性。")]),t._v(" "),a("h3",{attrs:{id:"regexp常用实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp常用实例"}},[t._v("#")]),t._v(" RegExp常用实例")]),t._v(" "),a("h4",{attrs:{id:"正则表达式表单验证实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式表单验证实例"}},[t._v("#")]),t._v(" 正则表达式表单验证实例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*是否带有小数*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("strValue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  objRegExp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+\\.\\d+$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  objRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验是否中文名称组成 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ischina")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4E00-\\u9FA5]{2,4}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*定义验证表达式*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*进行验证*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验是否全由8位数字组成 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStudentNo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[0-9]{8}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*定义验证表达式*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*进行验证*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验电话码格式 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTelCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^((0\\d{2,3}-\\d{7,8})|(1[3584]\\d{9}))$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*校验邮件地址是否合法 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsEmail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\w+@[a-zA-Z0-9]{2,10}(?:\\.[a-z]{2,4}){1,3}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v(':"#([A-Za-z0-9]*)"')])]),t._v(" "),a("p",[t._v("这个正则表达式匹配颜色#ffffff")]),t._v(" "),a("h2",{attrs:{id:"正则基本常识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则基本常识"}},[t._v("#")]),t._v(" 正则基本常识")]),t._v(" "),a("p",[t._v("在做项目的过程中，使用正则表达式来匹配一段文本中的特定种类字符，是比较常用的一种方式，下面是对常用的正则匹配做了一个归纳整理。")]),t._v(" "),a("p",[t._v("1、匹配中文:[\\u4e00-\\u9fa5]")]),t._v(" "),a("p",[t._v("2、英文字母:[a-zA-Z]")]),t._v(" "),a("p",[t._v("3、数字:[0-9]")]),t._v(" "),a("p",[t._v("4、匹配中文，英文字母和数字及下划线：^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$\n同时判断输入长度：\n[\\u4e00-\\u9fa5_a-zA-Z0-9_]{4,10}")]),t._v(" "),a("p",[t._v("5、\n(?!"),a("em",[t._v(")　　不能以_开头\n(?!.*?")]),t._v("$)　　不能以_结尾\n[a-zA-Z0-9_\\u4e00-\\u9fa5]+　　至少一个汉字、数字、字母、下划线\n$　　与字符串结束的地方匹配")]),t._v(" "),a("p",[t._v("6、只含有汉字、数字、字母、下划线，下划线位置不限：\n^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$")]),t._v(" "),a("p",[t._v("7、由数字、26个英文字母或者下划线组成的字符串\n^\\w+$")]),t._v(" "),a("p",[t._v('8、2~4个汉字\n"^[\\u4E00-\\u9FA5]{2,4}$";')]),t._v(" "),a("p",[t._v("9、最长不得超过7个汉字，或14个字节(数字，字母和下划线)正则表达式\n^[\\u4e00-\\u9fa5]{1,7}$|^[\\dA-Za-z_]{1,14}$")]),t._v(" "),a("p",[t._v("10、匹配双字节字符(包括汉字在内)：[^x00-xff]\n评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）")]),t._v(" "),a("p",[t._v("11、匹配空白行的正则表达式：ns*r\n评注：可以用来删除空白行")]),t._v(" "),a("p",[t._v("12、匹配HTML标记的正则表达式：<(S*?)[^>]"),a("em",[t._v(">.")]),t._v("?|<.*? />\n评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力")]),t._v(" "),a("p",[t._v("13、匹配首尾空白字符的正则表达式：^s*|s*$\n评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式")]),t._v(" "),a("p",[t._v("14、匹配Email地址的正则表达式：^[a-zA-Z0-9][\\w.-]"),a("em",[t._v("[a-zA-Z0-9]@[a-zA-Z0-9][\\w.-]")]),t._v("[a-zA-Z0-9].[a-zA-Z][a-zA-Z.]*[a-zA-Z]$")]),t._v(" "),a("p",[t._v("评注：表单验证时很实用")]),t._v(" "),a("p",[t._v("15、手机号：^((13[0-9])|(14[0-9])|(15[0-9])|(17[0-9])|(18[0-9]))\\d{8}$")]),t._v(" "),a("p",[t._v("16、身份证：(^\\d{15}$)|(^\\d{17}([0-9]|X|x)$)")]),t._v(" "),a("p",[t._v("17、匹配网址URL的正则表达式：[a-zA-z]+://[^s]*\n评注：网上流传的版本功能很有限，上面这个基本可以满足需求")]),t._v(" "),a("p",[t._v("18、匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n评注：表单验证时很实用")]),t._v(" "),a("p",[t._v("19、匹配国内电话号码：d{3}-d{8}|d{4}-d{7}\n评注：匹配形式如 0511-4405222 或 021-87888822")]),t._v(" "),a("p",[t._v("20、匹配腾讯QQ号：[1-9][0-9]{4,}\n评注：腾讯QQ号从10000开始")]),t._v(" "),a("p",[t._v("21、匹配中国邮政编码：[1-9]d{5}(?!d)\n评注：中国邮政编码为6位数字")]),t._v(" "),a("p",[t._v("22、匹配身份证：d{15}|d{18}\n评注：中国的身份证为15位或18位")]),t._v(" "),a("p",[t._v("23、匹配ip地址：d+.d+.d+.d+\n评注：提取ip地址时有用")]),t._v(" "),a("p",[t._v("24、匹配特定数字：\n^[1-9]d*$　 　 //匹配正整数\n^-[1-9]d*$ 　 //匹配负整数\n^-?[1-9]d*$　　 //匹配整数\n^[1-9]d*|0$　 //匹配非负整数（正整数 + 0）\n^-[1-9]d*|0$　　 //匹配非正整数（负整数 + 0）\n^[1-9]d*.d*|0.d*[1-9]d*$　　 //匹配正浮点数\n^-([1-9]d*.d*|0.d*[1-9]d*)$　 //匹配负浮点数\n^-?([1-9]d*.d*|0.d*[1-9]d*|0?.0+|0)$　 //匹配浮点数\n^[1-9]d*.d*|0.d*[1-9]d*|0?.0+|0$　　 //匹配非负浮点数（正浮点数 + 0）\n^(-([1-9]d*.d*|0.d*[1-9]d*))|0?.0+|0$　　//匹配非正浮点数（负浮点数 + 0）\n评注：处理大量数据时有用，具体应用时注意修正")]),t._v(" "),a("p",[t._v("25、匹配特定字符串：\n^[A-Za-z]+$　　//匹配由26个英文字母组成的字符串\n^[A-Z]+$　　//匹配由26个英文字母的大写组成的字符串\n^[a-z]+$　　//匹配由26个英文字母的小写组成的字符串\n^[A-Za-z0-9]+$　　//匹配由数字和26个英文字母组成的字符串\n^w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串")]),t._v(" "),a("p",[t._v("26、\n在使用RegularExpressionValidator验证控件时的验证功能及其验证表达式介绍如下:\n只能输入数字：“^[0-9]"),a("em",[t._v("$”\n只能输入n位的数字：“^d{n}$”\n只能输入至少n位数字：“^d{n,}$”\n只能输入m-n位的数字：“^d{m,n}$”\n只能输入零和非零开头的数字：“^(0|[1-9][0-9]")]),t._v(")$”\n只能输入有两位小数的正实数：“^[0-9]+(.[0-9]{2})?$”\n只能输入有1-3位小数的正实数：“^[0-9]+(.[0-9]{1,3})?$”\n只能输入非零的正整数：“^+?[1-9][0-9]"),a("em",[t._v("$”\n只能输入非零的负整数：“^-[1-9][0-9]")]),t._v("$”\n只能输入长度为3的字符：“^.{3}$”\n只能输入由26个英文字母组成的字符串：“^[A-Za-z]+$”\n只能输入由26个大写英文字母组成的字符串：“^[A-Z]+$”\n只能输入由26个小写英文字母组成的字符串：“^[a-z]+$”\n只能输入由数字和26个英文字母组成的字符串：“^[A-Za-z0-9]+$”\n只能输入由数字、26个英文字母或者下划线组成的字符串：“^w+$”\n验证用户密码:“^[a-zA-Z]w{5,17}$”正确格式为：以字母开头，长度在6-18之间，\n只能包含字符、数字和下划线。\n验证是否含有^%&',;=?$\"等字符：“[^%&',;=?$x22]+”\n只能输入汉字：“^[u4e00-u9fa5],{0,}$”\n验证Email地址：“^w+[-+.]w+)"),a("em",[t._v("@w+([-.]w+)")]),t._v(".w+([-.]w+)"),a("em",[t._v("$”\n验证InternetURL：“^http://([w-]+.)+[w-]+(/[w-./?%&=]")]),t._v(")?$”\n验证身份证号（15位或18位数字）：“^d{15}|d{}18$”\n验证一年的12个月：“^(0?[1-9]|1[0-2])$”正确格式为：“01”-“09”和“1”“12”\n验证一个月的31天：“^((0?[1-9])|((1|2)[0-9])|30|31)$”\n正确格式为：“01”“09”和“1”“31”。\n匹配中文字符的正则表达式： [u4e00-u9fa5]\n匹配双字节字符(包括汉字在内)：[^x00-xff]\n匹配空行的正则表达式：n[s| ]"),a("em",[t._v("r\n匹配HTML标记的正则表达式：/<(.")]),t._v(")>."),a("em",[t._v("|<(.")]),t._v(") />/\n匹配首尾空格的正则表达式：(^s*)|(s*$)\n匹配Email地址的正则表达式：w+([-+.]w+)"),a("em",[t._v("@w+([-.]w+)")]),t._v(".w+([-.]w+)*\n匹配网址URL的正则表达式：http://([w-]+.)+[w-]+(/[w- ./?%&=]*)?")])])}),[],!1,null,null,null);e.default=n.exports}}]);