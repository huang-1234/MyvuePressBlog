(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{666:function(a,s,t){"use strict";t.r(s);var r=t(6),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"逻辑运算和数学运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算和数学运算"}},[a._v("#")]),a._v(" 逻辑运算和数学运算")]),a._v(" "),t("h2",{attrs:{id:"异或运算-xor-教程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异或运算-xor-教程"}},[a._v("#")]),a._v(" 异或运算 XOR 教程")]),a._v(" "),t("h2",{attrs:{id:"一、含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、含义"}},[a._v("#")]),a._v(" 一、含义")]),a._v(" "),t("p",[a._v('XOR 是 exclusive OR 的缩写。英语的 exclusive 意思是"专有的，独有的"，可以理解为 XOR 是更单纯的 OR 运算。')]),a._v(" "),t("p",[a._v("我们知道，OR 运算的运算子有两种情况，计算结果为"),t("code",[a._v("true")]),a._v("。")]),a._v(" "),t("p",[a._v("（1）一个为 true，另一个为 false;")]),a._v(" "),t("p",[a._v("（2）两个都为 true。")]),a._v(" "),t("p",[a._v("上面两种情况，有时候需要明确区分，所以引入了 XOR。")]),a._v(" "),t("p",[a._v("XOR 排除了第二种情况，只有第一种情况（一个运算子为"),t("code",[a._v("true")]),a._v("，另一个为"),t("code",[a._v("false")]),a._v("）才会返回 true，所以可以看成是更单纯的 OR 运算。也就是说， "),t("strong",[a._v("XOR 主要用来判断两个值是否不同。")])]),a._v(" "),t("p",[a._v("XOR 一般使用插入符号（caret）"),t("code",[a._v("^")]),a._v("表示。如果约定"),t("code",[a._v("0")]),a._v(" 为 false，"),t("code",[a._v("1")]),a._v(" 为 true，那么 XOR 的运算真值表如下。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])])]),a._v(" "),t("h2",{attrs:{id:"二、运算定律"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、运算定律"}},[a._v("#")]),a._v(" 二、运算定律")]),a._v(" "),t("p",[a._v("XOR 运算有以下的运算定律。由于非常简单，这里就省略证明了。")]),a._v(" "),t("p",[a._v("（1）"),t("strong",[a._v("一个值与自身的运算，总是为 false。")])]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])])]),a._v(" "),t("p",[a._v("（2）"),t("strong",[a._v("一个值与 0 的运算，总是等于其本身。")])]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x\n")])])])]),a._v(" "),t("p",[a._v("（3）"),t("strong",[a._v("可交换性")])]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" x\n")])])])]),a._v(" "),t("p",[a._v("（4）"),t("strong",[a._v("结合性")])]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" z\n")])])])]),a._v(" "),t("h2",{attrs:{id:"三、应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、应用"}},[a._v("#")]),a._v(" 三、应用")]),a._v(" "),t("p",[a._v("根据上面的这些运算定律，可以得到异或运算的很多重要应用。")]),a._v(" "),t("h3",{attrs:{id:"_3-1-简化计算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简化计算"}},[a._v("#")]),a._v(" 3.1 简化计算")]),a._v(" "),t("p",[a._v("多个值的异或运算，可以根据运算定律进行简化。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" b\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" c\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" c\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c\n")])])])]),a._v(" "),t("h3",{attrs:{id:"_3-2-交换值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-交换值"}},[a._v("#")]),a._v(" 3.2 交换值")]),a._v(" "),t("p",[a._v("两个变量连续进行三次异或运算，可以互相交换值。")]),a._v(" "),t("p",[a._v("假设两个变量是"),t("code",[a._v("x")]),a._v("和"),t("code",[a._v("y")]),a._v("，各自的值是"),t("code",[a._v("a")]),a._v("和"),t("code",[a._v("b")]),a._v("。下面就是"),t("code",[a._v("x")]),a._v("和"),t("code",[a._v("y")]),a._v("进行三次异或运算，注释部分是每次运算后两个变量的值。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// (a ^ b, b)")]),a._v("\ny "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// (a ^ b, a ^ b ^ b) => (a ^ b, a)")]),a._v("\nx "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// (a ^ b ^ a, a) => (b, a)")]),a._v("\n")])])])]),a._v(" "),t("p",[a._v("这是两个变量交换值的最快方法，不需要任何额外的空间。")]),a._v(" "),t("h3",{attrs:{id:"_3-3-加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-加密"}},[a._v("#")]),a._v(" 3.3 加密")]),a._v(" "),t("p",[a._v("异或运算可以用于加密。")]),a._v(" "),t("p",[a._v("第一步，明文（text）与密钥（key）进行异或运算，可以得到密文（cipherText）。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("text "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" key "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" cipherText\n")])])])]),a._v(" "),t("p",[a._v("第二步，密文与密钥再次进行异或运算，就可以还原成明文。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("cipherText "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" key "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" text\n")])])])]),a._v(" "),t("p",[a._v("原理很简单，如果明文是 x，密钥是 y，那么 x 连续与 y 进行两次异或运算，得到自身。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x\n")])])])]),a._v(" "),t("h3",{attrs:{id:"_3-4-数据备份"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据备份"}},[a._v("#")]),a._v(" 3.4 数据备份")]),a._v(" "),t("p",[a._v("异或运算可以用于数据备份。")]),a._v(" "),t("p",[a._v("文件 x 和文件 y 进行异或运算，产生一个备份文件 z。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" z\n")])])])]),a._v(" "),t("p",[a._v("以后，无论是文件 x 或文件 y 损坏，只要不是两个原始文件同时损坏，就能根据另一个文件和备份文件，进行还原。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" z\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" y\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" y\n")])])])]),a._v(" "),t("p",[a._v("上面的例子是 y 损坏，x 和 z 进行异或运算，就能得到 y。")]),a._v(" "),t("h2",{attrs:{id:"四、一道面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、一道面试题"}},[a._v("#")]),a._v(" 四、一道面试题")]),a._v(" "),t("p",[a._v("一些面试的算法题，也能使用异或运算快速求解。")]),a._v(" "),t("p",[a._v("请看下面这道题。")]),a._v(" "),t("blockquote",[t("p",[a._v("一个数组包含 n-1 个成员，这些成员是 1 到 n 之间的整数，且没有重复，请找出缺少的那个数字。")])]),a._v(" "),t("p",[a._v("最快的解答方法，就是把所有数组成员（A[0] 一直到 A[n-2]）与 1 到 n 的整数全部放在一起，进行异或运算。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" n\n")])])])]),a._v(" "),t("p",[a._v("上面这个式子中，每个数组成员都会出现两次，相同的值进行异或运算就会得到 0。只有缺少的那个数字出现一次，所以最后得到的就是这个值。")]),a._v(" "),t("p",[a._v("你可能想到了，加法也可以解这道题。")]),a._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])])]),a._v(" "),t("p",[a._v("但是，加法的速度没有异或运算快，而且需要额外的空间。如果数字比较大，还有溢出的可能。")]),a._v(" "),t("p",[a._v("下面是一道类似的题目，大家可以作为练习。")]),a._v(" "),t("blockquote",[t("p",[a._v("一个数组包含 n+1 个成员，这些成员是 1 到 n 之间的整数。只有一个成员出现了两次，其他成员都只出现一次，请找出重复出现的那个数字。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);